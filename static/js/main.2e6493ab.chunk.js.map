{"version":3,"sources":["components/Nav.js","pages/About.js","media/developer/abdalwahab.png","pages/Developer.js","components/authrization.js","components/DeleteMe.js","media/forgotpassword/step_1.png","media/forgotpassword/step_2.png","media/forgotpassword/step_3.png","media/forgotpassword/step_4.png","components/ForgotPassword.js","components/Admin.js","components/GetAllUsers.js","media/installation/step_1.png","media/installation/step_2.png","media/installation/step_3.png","media/installation/step_4.png","util/data.js","media/installation/step_5.png","media/installation/step_6.png","media/installation/step_7.png","media/installation/step_8.png","media/installation/step_9.png","media/installation/step_10.png","media/installation/step_11.png","media/installation/step_12.png","media/installation/step_13.png","components/Installation.js","media/login/step_1.png","media/login/step_2.png","components/Login.js","media/signup/step_1.png","media/signup/step_2.png","components/Signup.js","components/SubNavList.js","media/forgotpassword/step_5.png","media/forgotpassword/step_6.png","components/updatePassword.js","media/updateUserInfo/step_1.png","components/updateUserInfo.js","pages/Docs.js","media/homeBackground.png","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","to","About","Developer","src","abdalwahab","alt","href","color","size","Authrization","DeleteMe","ForgotPassword","step_1","step_2","step_3","step_4","Admin","GetAllUsers","mongoImages","Installation","useState","mongoOpen","setMongoOpen","sendGridOpen","setSendGridOpen","jwtOpen","setJWtOpen","cloudOpen","setCloudOpen","lazyRender","open","transitionTime","transitionCloseTime","onClosing","onOpening","trigger","triggerStyle","backgroundColor","cursor","padding","outlineStyle","display","transitionDuration","map","img","onClick","Login","Signup","SubNavList","match","path","updatePassword","step_5","step_6","updateUserInfo","Docs","exact","component","Home","headerImg","App","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e6493ab.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Nav() {\n  return (\n    <>\n      <div className=\"header__nav\">\n        <div className=\"nav__content\">\n          <nav className=\"nav\">\n            <h1 className=\"logo\">AbdThy</h1>\n            <ul className=\"list\">\n              <li className=\"item\">\n                <Link className=\"link\" to=\"/home\">\n                  Home\n                </Link>\n              </li>\n\n              <li className=\"item\">\n                <Link className=\"link\" to=\"/docs\">\n                  Docs\n                </Link>\n              </li>\n              <li className=\"item\">\n                <Link className=\"link\" to=\"/about\">\n                  About\n                </Link>\n              </li>\n\n              <li className=\"item\">\n                <Link className=\"link\" to=\"/developer\">\n                  Developer\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n      <div className=\"nav_clear\"></div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div className=\"about\">\n      <div>\n        <h2>About This Project</h2>\n        <p className=\"dark\">\n          This is an open source project, anything in this project is free for anyone who\n          want to use or to contibrute to, it built by abd alwahab who is a full stack\n          developer, this is project is build to help beginners developer to build real\n          world projects base on real backend\n        </p>\n      </div>\n\n      <br />\n      <br />\n\n      <div>\n        <h2>Toos Used in This Project</h2>\n\n        <p className=\"dark\">\n          Tools used in this backend are nodejs as a backend server and mongoDB as a\n          databse and json web token for authinticate users and sendgrid as a mailing\n          service and using cloudinary as an image hosting\n        </p>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/abdalwahab.5506f359.png\";","import React from \"react\";\n\nimport abdalwahab from \"./../media/developer/abdalwahab.png\";\nimport { FaTwitter, FaGithub, FaLinkedin, FaBriefcase, FaYoutube } from \"react-icons/fa\";\n\nconst Developer = () => {\n  return (\n    <div className=\"preview-profile\">\n      <div className=\"preview-profile-header\">\n        <div className=\"preview-profile-header-box\">\n          <div className=\"preview-profile-header-image-container\">\n            <img src={abdalwahab} alt=\"\" className=\"preview-profile-header-image\" />\n          </div>\n\n          <div className=\"preview-profile-header-content\">\n            <h1>Abd Alwahab Abdallah</h1>\n            <p>\n              Hi, I’m Abd Alwahab, a Full Stack Software Developer who loves building high\n              performance and scalable products. I recently developed a web app using\n              React , Node , Express and MongoDB that lets user order food online. I’d\n              love to combine my passion for learning and teaching with my software\n              development skills to continue building personalized learning products for\n              people.\n            </p>\n\n            <div className=\"preview-profile-header-icons\">\n              <a href=\"https://www.linkedin.com/in/abd-alwahab/\">\n                <FaLinkedin color=\"#0072b1\" size={30} />\n              </a>\n\n              <a href=\"https://github.com/Abd-Alwahab\">\n                <FaGithub color=\"#222\" size={30} />\n              </a>\n\n              <a href=\"https://twitter.com/codeWithAbd\">\n                <FaTwitter color=\"#00acee\" size={30} />\n              </a>\n              <a href=\"https://codewithabd.web.app\">\n                <FaBriefcase color=\"#222\" size={30} />\n              </a>\n\n              <a href=\"https://www.youtube.com/channel/UCZz14Hj5YxrWse0lc9Bf1GQ\">\n                <FaYoutube color=\"red\" size={30} />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Developer;\n","import React from \"react\";\n\nfunction Authrization() {\n  return (\n    <div>\n      <br />\n      <p className=\"docs_desc dark\">\n        This Action that we need to take requires a logged in user.\n      </p>\n\n      <br />\n      <p className=\"docs_desc\">\n        To Verify that the user is logged in then we need to send an http header to the\n        api and this http header contain a valid json web token and this will ensure that\n        the api understand that this is a looged in user.\n      </p>\n\n      <table>\n        <tr>\n          <th>http-header-name</th>\n          <th>value</th>\n          <th>Required</th>\n        </tr>\n\n        <tr>\n          <td>token</td>\n          <td>valid json web token</td>\n          <td>True</td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n\nexport default Authrization;\n","import React from \"react\";\nimport Authrization from \"./authrization\";\n\nfunction DeleteMe() {\n  return (\n    <div>\n      <h2>Delete Current User</h2>\n\n      <Authrization />\n\n      <p className=\"docs_desc\">\n        To delete an existing account, you need to make a delete request to the following\n        endpoint\n      </p>\n      <br />\n      <span className=\"hilight m-m\">\n        DELETE <div className=\"empty_space\"></div> http://localhost:3000/api/v1/users/me\n      </span>\n      <p className=\"docs_desc m-m\">\n        This will make a delete request to the api and it will try to deactivate your\n        account.\n      </p>\n    </div>\n  );\n}\n\nexport default DeleteMe;\n","export default __webpack_public_path__ + \"static/media/step_1.03ce01e3.png\";","export default __webpack_public_path__ + \"static/media/step_2.430da148.png\";","export default __webpack_public_path__ + \"static/media/step_3.a6c4da91.png\";","export default __webpack_public_path__ + \"static/media/step_4.fa75a42e.png\";","import React from \"react\";\n\nimport step_1 from \"./../media/forgotpassword/step_1.png\";\nimport step_2 from \"./../media/forgotpassword/step_2.png\";\nimport step_3 from \"./../media/forgotpassword/step_3.png\";\nimport step_4 from \"./../media/forgotpassword/step_4.png\";\n\nfunction ForgotPassword() {\n  return (\n    <div>\n      <h2>How To Reset a User Password </h2>\n      <p className=\"docs_desc\">\n        To add the reset password functionlity, you need to make a post request to the\n        following endpoint\n      </p>\n      <br />\n      <span className=\"hilight m-m\">\n        POST <div className=\"empty_space\"></div>{\" \"}\n        http://localhost:3000/api/v1/users/forgotpassword\n      </span>\n\n      <p className=\"docs_desc m-m\">\n        This will make a post request to the api and it will try send an email with the\n        reset token for the user , however, In order for this to work then we need to\n        provide some needed info to veryfiy this proccess, IN our case we need only a\n        valid email that we have in our database.\n      </p>\n\n      <table>\n        <tr>\n          <th>Property</th>\n          <th>Required</th>\n        </tr>\n\n        <tr>\n          <td>Email</td>\n          <td>True</td>\n        </tr>\n      </table>\n\n      <p className=\"docs_desc m-s\">You need to send a json object that look like this:</p>\n      <img src={step_1} alt=\"forgot password step\" className=\"docs__img\" />\n      <p className=\"docs_desc m-s\">\n        This will try to check for the provided info and if everything is corect then it\n        will send a passwrod reset token to the user email.\n      </p>\n\n      <img src={step_2} alt=\"forgot password step\" className=\"docs__img\" />\n\n      <p className=\"docs_desc m-s\">\n        The user should get an email in his/her email that has the reset password url and\n        they can click on it and that should redirect the user to a password reset page\n      </p>\n\n      <p className=\"docs_desc m-s\">\n        In the password reset page, we need to make a post request to the following\n        endpoint\n      </p>\n      <br />\n      <span className=\"hilight m-m\">\n        POST <div className=\"empty_space\"></div>{\" \"}\n        http://localhost:3000/api/v1/users/resetPassword/:token\n      </span>\n\n      <p className=\"docs_desc m-m\">\n        however, In order for this thing to work as it should then we need to send along\n        the password reset token that the user recived in their email as a query parameter\n        so the endpoint will look like this\n      </p>\n\n      <br />\n      <span className=\"hilight m-m\">\n        POST <div className=\"empty_space\"></div>{\" \"}\n        http://localhost:3000/api/v1/users/resetPassword/\n        <span className=\"danger\">dfklahdlkjshzjksfhsksfkjsfskf</span>\n      </span>\n\n      <br />\n      <p className=\"docs_desc m-m\">\n        so the text that you can see in the red color is the password reset token and it\n        has to be passed as a query parameter, along the token you need to send two more\n        information in the request body to the api\n      </p>\n\n      <img src={step_3} alt=\"forgot password step\" className=\"docs__img\" />\n\n      <table>\n        <tr>\n          <th>Property</th>\n          <th>Required</th>\n        </tr>\n\n        <tr>\n          <td>password</td>\n          <td>True</td>\n        </tr>\n\n        <tr>\n          <td>passwordConfirm</td>\n          <td>True</td>\n        </tr>\n      </table>\n\n      <p className=\"docs_desc m-s\">\n        If you followed the mentioned steps then you should get a response that look\n        something like this:\n      </p>\n\n      <img src={step_4} alt=\"forgot password step\" className=\"docs__img\" />\n\n      <p className=\"docs_desc m-s\">\n        If so then that confirmed that the password for the user has been reseted and new\n        json web token was created to log the user in.\n      </p>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import React from \"react\";\n\nfunction Admin() {\n  return (\n    <div>\n      <br />\n\n      <p className=\"dark\">\n        To get All the users ain the datbase then you must be an admin to perform this\n        action\n      </p>\n\n      <div className=\"note_danger\">\n        <div className=\"note\">Note</div>\n        <p className=\"docs_desc\">\n          <ul>\n            <li>\n              To make any user admin then you need to make this from the database Manualy{\" \"}\n            </li>\n            <li>Open your mongodb atlas account</li>\n\n            <li>Open the user collection in the database list</li>\n            <li>Click on the edit icon for any user</li>\n            <li>Change the role property from user to admin</li>\n            <li>Login again with this spesifc user to apply the changes</li>\n          </ul>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;\n","import React from \"react\";\nimport Admin from \"./Admin\";\nimport Authrization from \"./authrization\";\n\nfunction GetAllUsers() {\n  return (\n    <div>\n      <h2>Get All Users</h2>\n      <Admin />\n      <Authrization />\n      <p className=\"docs_desc\">\n        To get all the users in our database, you need to make a get request to the\n        following endpoint\n      </p>\n      <br />\n\n      <span className=\"hilight m-m\">\n        GET <div className=\"empty_space\"></div> http://localhost:3000/api/v1/users/\n      </span>\n\n      <br />\n      <br />\n\n      <p className=\"docs_desc\">\n        This will return an array of the users that we have in the database.\n      </p>\n    </div>\n  );\n}\n\nexport default GetAllUsers;\n","export default __webpack_public_path__ + \"static/media/step_1.cab93635.png\";","export default __webpack_public_path__ + \"static/media/step_2.709a534b.png\";","export default __webpack_public_path__ + \"static/media/step_3.040964a1.png\";","export default __webpack_public_path__ + \"static/media/step_4.d2c9dd45.png\";","import step_5 from \"./../media/installation/step_5.png\";\nimport step_6 from \"./../media/installation/step_6.png\";\nimport step_7 from \"./../media/installation/step_7.png\";\nimport step_8 from \"./../media/installation/step_8.png\";\nimport step_9 from \"./../media/installation/step_9.png\";\nimport step_10 from \"./../media/installation/step_10.png\";\nimport step_11 from \"./../media/installation/step_11.png\";\nimport step_12 from \"./../media/installation/step_12.png\";\nimport step_13 from \"./../media/installation/step_13.png\";\n\nexport const mongoImages = [\n  step_5,\n  step_6,\n  step_7,\n  step_8,\n  step_9,\n  step_10,\n  step_11,\n  step_12,\n  step_13,\n];\n","export default __webpack_public_path__ + \"static/media/step_5.1eb8f7cc.png\";","export default __webpack_public_path__ + \"static/media/step_6.80852c32.png\";","export default __webpack_public_path__ + \"static/media/step_7.4837c64e.png\";","export default __webpack_public_path__ + \"static/media/step_8.41715121.png\";","export default __webpack_public_path__ + \"static/media/step_9.097ba13b.png\";","export default __webpack_public_path__ + \"static/media/step_10.c514d36e.png\";","export default __webpack_public_path__ + \"static/media/step_11.4233ca38.png\";","export default __webpack_public_path__ + \"static/media/step_12.593aad56.png\";","export default __webpack_public_path__ + \"static/media/step_13.ee1b43b5.png\";","import React, { useState } from \"react\";\nimport step_1 from \"./../media/installation/step_1.png\";\nimport step_2 from \"./../media/installation/step_2.png\";\nimport step_3 from \"./../media/installation/step_3.png\";\nimport step_4 from \"./../media/installation/step_4.png\";\nimport { mongoImages } from \"./../util/data\";\nimport Collapsible from \"react-collapsible\";\nimport { FaArrowDown, FaArrowRight, FaArrowUp } from \"react-icons/fa\";\n\nfunction Installation() {\n  const [mongoOpen, setMongoOpen] = useState(false);\n  const [sendGridOpen, setSendGridOpen] = useState(false);\n  const [jwtOpen, setJWtOpen] = useState(false);\n  const [cloudOpen, setCloudOpen] = useState(false);\n  return (\n    <div>\n      <h2>How To Get Started</h2>\n      <p className=\"docs_desc\">\n        To get started you need to jump over to this{\" \"}\n        <a href=\"https://github.com/Abd-Alwahab/auth-system\"> github repo </a> and\n        download the project to your local environment or you can use this command{\" \"}\n        <div className=\"hilight\">\n          git clone https://github.com/Abd-Alwahab/auth-system.git\n        </div>\n        <p className=\"docs_desc\">\n          Now, you have the project localy on your OS, its time for you to open it in your\n          code editor (I use VSCode)\n          <img src={step_1} alt=\"open folder\" className=\"docs__img\" />\n        </p>\n        <p className=\"docs_desc\">\n          Now, once you open the project in your code editor, we need to run the following\n          command to install some npm packages that we need, so open your terminal in your\n          code editor and run the following command\n          <div className=\"hilight\">npm install</div>\n          <p className=\"docs_desc\">That will go ahead and add the node_modules folder </p>\n          <img src={step_2} alt=\"open folder\" className=\"docs__img\" />\n        </p>\n        <p className=\"docs_desc\">\n          Once you have the node_modules folder added to your porject, now we need to\n          create a file to store the environment variables that we need in order for our\n          application to run, now if you are wondering why we are using environment\n          variables here, well the answer is very simple its just to store secure and\n          important information\n          <p className=\"docs_desc\">\n            To create the environment variables you need to run the follwoing command{\" \"}\n          </p>\n          <div className=\"hilight\">touch .env</div>\n          <p className=\"docs_desc\">\n            That will go ahead and add new file called .env to your project tree{\" \"}\n          </p>\n          <img src={step_3} alt=\"open folder\" className=\"docs__img\" />\n          <p className=\"docs_desc\">\n            Now We need to add the following environment variables to our file so our\n            application cloud run\n          </p>\n          <div className=\"hilight\">\n            mongodb_url <br />\n            token_secret\n            <br /> token_date\n            <br />\n            email_user <br />\n            email_password <br />\n            cloud_name <br />\n            cloud_api\n            <br />\n            cloud_secrit\n          </div>\n          <img src={step_4} alt=\"open folder\" className=\"docs__img\" />\n        </p>\n      </p>\n\n      <div className=\"note_danger\">\n        <div className=\"note\">Note</div>\n        <p className=\"docs_desc\">\n          <ul>\n            <li>Do not be confuse becuase of the number of the environment variables </li>\n            <li>\n              Make sure to use the exact same name as shown in the screeshot otherwise\n              thing will not work for you.\n            </li>\n          </ul>\n        </p>\n      </div>\n\n      <p className=\"docs_desc\">\n        Now let us undersatand what values to add to these environment variables, the\n        first one is mongo_db , its your contection string that you will use to contect\n        your api to mongoDB atlas\n      </p>\n\n      <p className=\"docs_desc\">\n        To get you contection string, you need to create an account here and{\" \"}\n        <a href=\"https://www.mongodb.com/cloud/atlas\">MongoDB Atlas</a> , Once you have\n        your account created then you need to follow these steps to get your contection\n        string\n      </p>\n\n      <div className=\"steps_container\">\n        <Collapsible\n          // tabIndex={0}\n          lazyRender\n          open={mongoOpen}\n          transitionTime={900}\n          transitionCloseTime={300}\n          onClosing={() => {\n            setMongoOpen(false);\n          }}\n          onOpening={() => {\n            setMongoOpen(true);\n          }}\n          trigger={\n            <button className=\"btn-collaps\">\n              <div>\n                {!mongoOpen ? (\n                  <FaArrowDown size=\"2em\" color=\"#fff\" />\n                ) : (\n                  <FaArrowRight size=\"2em\" color=\"#fff\" />\n                )}\n              </div>\n              <h3>Show MondoDB Steps</h3>\n            </button>\n          }\n          triggerStyle={{\n            backgroundColor: mongoOpen ? \"green\" : \"tomato\",\n            color: \"#fff\",\n            cursor: \"pointer\",\n            padding: \"1rem .6rem\",\n            outlineStyle: \"none\",\n            display: \"block\",\n            transitionDuration: \".5s\",\n          }}\n        >\n          {mongoImages.map((img) => (\n            <img src={img} alt=\"mongo steps\" className=\"docs__img img_step\" />\n          ))}\n        </Collapsible>\n\n        <Collapsible\n          // tabIndex={0}\n          lazyRender\n          open={jwtOpen}\n          transitionTime={900}\n          transitionCloseTime={300}\n          onClosing={() => {\n            setJWtOpen(false);\n          }}\n          onOpening={() => {\n            setJWtOpen(true);\n          }}\n          // onClick={() => {\n          //   setJWtOpen(!jwtOpen);\n          //   console.log(jwtOpen);\n          // }}\n          trigger={\n            <button className=\"btn-collaps\">\n              <div>\n                {!jwtOpen ? (\n                  <FaArrowDown size=\"2em\" color=\"#fff\" />\n                ) : (\n                  <FaArrowRight size=\"2em\" color=\"#fff\" />\n                )}\n              </div>\n              <h3>\n                {!jwtOpen ? \"Show JSON Web Token Steps\" : \"Close JSON Web Token Steps\"}\n              </h3>\n            </button>\n          }\n          triggerStyle={{\n            backgroundColor: jwtOpen ? \"green\" : \"tomato\",\n            color: \"#fff\",\n            cursor: \"pointer\",\n            padding: \"1rem .6rem\",\n            outlineStyle: \"none\",\n            display: \"block\",\n            transitionDuration: \".5s\",\n          }}\n        >\n          <div className=\"content_container\">\n            <p className=\"docs_desc\">\n              If you followed the mongoDB steps then you should get you conection string ,\n              let us move to the next two environment variables, which will be the{\" \"}\n              <div className=\"m-s\">\n                <div className=\"dark\">\n                  token_secret <br />\n                  token_date\n                </div>\n              </div>\n            </p>\n\n            <p className=\"docs_desc\">\n              These are very simple once , for the{\" \"}\n              <span className=\"dark\">token_secret</span>, just give it any long text ,\n              juts make sure that is at least <span className=\"dark\"> 32 charcters</span>,\n              and for the <span className=\"dark\"> token_date</span>, just give it any\n              number plus the letter d, this will be used for as expire date for the json\n              web token, in my case I used 90d, you can use the same as me.\n            </p>\n\n            <p className=\"docs_desc\">\n              Now Let us move to the next once which are:\n              <div className=\"m-s\">\n                <div className=\"dark\">\n                  email_user <br />\n                  email_password\n                </div>\n              </div>\n            </p>\n          </div>\n        </Collapsible>\n\n        <Collapsible\n          // tabIndex={0}\n          lazyRender\n          open={sendGridOpen}\n          transitionTime={900}\n          transitionCloseTime={300}\n          onClick={() => setSendGridOpen(false)}\n          onClosing={() => {\n            setSendGridOpen(false);\n          }}\n          onOpening={() => {\n            setSendGridOpen(true);\n          }}\n          trigger={\n            <button className=\"btn-collaps\">\n              <div>\n                {!sendGridOpen ? (\n                  <FaArrowDown size=\"2em\" color=\"#fff\" />\n                ) : (\n                  <FaArrowRight size=\"2em\" color=\"#fff\" />\n                )}\n              </div>\n              <h3>Show SendGrid Steps</h3>\n            </button>\n          }\n          triggerStyle={{\n            backgroundColor: sendGridOpen ? \"green\" : \"tomato\",\n            color: \"#fff\",\n            cursor: \"pointer\",\n            padding: \"1rem .6rem\",\n            outlineStyle: \"none\",\n            display: \"block\",\n            transitionDuration: \".5s\",\n          }}\n        >\n          <ol className=\"sub_list_item\">\n            <li>\n              Create an Account With <a href=\"https://sendgrid.com/\">SendGrid</a>{\" \"}\n            </li>\n\n            <li>Login into your account</li>\n            <li>\n              From your dashboard page , Expand The{\" \"}\n              <span className=\"dark\">Email API </span>Tap\n            </li>\n            <li>\n              From the Email API Tap, select{\" \"}\n              <span className=\"dark\"> Integration Guide </span>\n            </li>\n            <li>\n              Now Click on the <span className=\"dark\"> SMTP Relay </span>\n            </li>\n            <li>\n              Chosse a name for you key and click create key, this will create an api key\n              for you{\" \"}\n            </li>\n            <li>Now, you will see username and password </li>\n            <li>\n              Copy the user name and the password and use them in the environment\n              variables{\" \"}\n            </li>\n            <li>\n              Use the username for the <span className=\"dark\">email_user</span>{\" \"}\n            </li>\n            <li>\n              Use the password for the <span className=\"dark\">email_password</span>{\" \"}\n            </li>\n          </ol>\n        </Collapsible>\n\n        <Collapsible\n          // tabIndex={0}\n          lazyRender\n          open={cloudOpen}\n          transitionTime={900}\n          transitionCloseTime={300}\n          onClick={() => setCloudOpen(false)}\n          onClosing={() => {\n            setCloudOpen(false);\n          }}\n          onOpening={() => {\n            setCloudOpen(true);\n          }}\n          trigger={\n            <button className=\"btn-collaps\">\n              <div>\n                {!cloudOpen ? (\n                  <FaArrowDown size=\"2em\" color=\"#fff\" />\n                ) : (\n                  <FaArrowRight size=\"2em\" color=\"#fff\" />\n                )}\n              </div>\n              <h3>Show Cloudinary Steps</h3>\n            </button>\n          }\n          triggerStyle={{\n            backgroundColor: cloudOpen ? \"green\" : \"tomato\",\n            color: \"#fff\",\n            cursor: \"pointer\",\n            padding: \"1rem .6rem\",\n            outlineStyle: \"none\",\n            display: \"block\",\n            transitionDuration: \".5s\",\n          }}\n        >\n          <ol className=\"sub_list_item\">\n            <li>\n              Create an Account With <a href=\"https://cloudinary.com\">Cloudinary</a>{\" \"}\n            </li>\n\n            <li>Login into your account</li>\n            <li>\n              From your dashboard page , You will see the{\" \"}\n              <span className=\"dark\">Account Details </span> Box\n            </li>\n            <li>\n              Copy the\n              <span className=\"dark\"> Cloud name </span> and use it in the cloud_name\n              environment variable\n            </li>\n            <li>\n              Copy the <span className=\"dark\">API Key</span> and past it in the\n              <span className=\"dark\"> cloud_api </span> environment variable\n            </li>\n            <li>\n              Copy the <span className=\"dark\">API Secret</span> and past it in the\n              <span className=\"dark\"> cloud_secrit </span> environment variable\n            </li>\n            <li>Now, you are done. </li>\n          </ol>\n        </Collapsible>\n\n        <p className=\"docs_desc\">\n          Now , everything should be ok for you, to make sure that everything went ok,\n          just run this command in your terminal\n          <span className=\"dark\">npm start</span> , you should be able to see this message{\" \"}\n          <span className=\"dark\">\n            MongoDB database connection established successfully\n          </span>\n          if not please read the steps and make sure you did everything with me.\n        </p>\n      </div>\n    </div>\n  );\n}\n\n//\n\nexport default Installation;\n","export default __webpack_public_path__ + \"static/media/step_1.749d6b93.png\";","export default __webpack_public_path__ + \"static/media/step_2.9a8d6ee7.png\";","import React from \"react\";\n\nimport step_1 from \"./../media/login/step_1.png\";\nimport step_2 from \"./../media/login/step_2.png\";\n\nfunction Login() {\n  return (\n    <div>\n      {\" \"}\n      <h2>How To Login With an Existing Account </h2>\n      <p className=\"docs_desc\">\n        To Login for an existing account, you need to make a post request to the following\n        endpoint\n      </p>\n      <br />\n      <span className=\"hilight m-m\">\n        POST <div className=\"empty_space\"></div> http://localhost:3000/api/v1/users/login\n      </span>\n      <p className=\"docs_desc m-m\">\n        This will make a post request to the api and it will try send back json wdeb\n        token, however, In order for this to work then we need to provide some needed info\n        to veryfiy this proccess, IN our case we need only a valid email ad a password\n      </p>\n      <table>\n        <tr>\n          <th>Property</th>\n          <th>Required</th>\n        </tr>\n\n        <tr>\n          <td>Email</td>\n          <td>True</td>\n        </tr>\n        <tr>\n          <td>Password</td>\n          <td>True</td>\n        </tr>\n      </table>\n      <p className=\"docs_desc m-s\">You need to send a json object that look like this:</p>\n      <img src={step_1} alt=\"signup step\" className=\"docs__img\" />\n      <p className=\"docs_desc m-s\">\n        This will try to check for the provided info and if everything is corect then it\n        will return a valid json web token that the user can use to login\n      </p>\n      <img src={step_2} alt=\"signup step\" className=\"docs__img\" />\n      <p className=\"docs_desc m-s\">Thats it.</p>\n    </div>\n  );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/step_1.234ed216.png\";","export default __webpack_public_path__ + \"static/media/step_2.5820b442.png\";","import React from \"react\";\nimport step_1 from \"./../media/signup/step_1.png\";\nimport step_2 from \"./../media/signup/step_2.png\";\n\nfunction Signup() {\n  return (\n    <div>\n      <h2>How To Create a New User </h2>\n      <p className=\"docs_desc\">\n        To create ew user i our database, you need to make a post request to the following\n        endpoint\n      </p>\n      <br />\n      <span className=\"hilight m-m\">\n        POST <div className=\"empty_space\"></div> http://localhost:3000/api/v1/users/signup\n      </span>\n\n      <p className=\"docs_desc m-m\">\n        This will make a post request to the api and it will create a new user, however,\n        In order for this to work then we need to provide some eeded info to create a new\n        user, IN our case we need only a valid email ad a password\n      </p>\n\n      <table>\n        <tr>\n          <th>Property</th>\n          <th>Required</th>\n        </tr>\n\n        <tr>\n          <td>Name</td>\n          <td>True</td>\n        </tr>\n        <tr>\n          <td>Email</td>\n          <td>True</td>\n        </tr>\n        <tr>\n          <td>Password</td>\n          <td>True</td>\n        </tr>\n\n        <tr>\n          <td>Password Confirm</td>\n          <td>True</td>\n        </tr>\n      </table>\n\n      <p className=\"docs_desc m-s\">You need to send a json object that look like this:</p>\n\n      <img src={step_1} alt=\"signup step\" className=\"docs__img\" />\n\n      <p className=\"docs_desc m-s\">\n        This will create a new user in our database and also it will return the newly\n        created user{\" \"}\n      </p>\n\n      <img src={step_2} alt=\"signup step\" className=\"docs__img\" />\n\n      <p className=\"docs_desc m-s\">Thats it, you can create as many users as you want!</p>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport default function SubNavList({ match }) {\n  return (\n    <>\n      <nav className=\"sub__nav\">\n        <ul className=\"sub__list\">\n          <li className=\"sub__item\">\n            <NavLink className=\"sub__link\" to={`${match.path}/installation`}>\n              {\" \"}\n              Installation\n            </NavLink>\n          </li>\n\n          <li className=\"sub__item\">\n            <NavLink className=\"sub__link\" to={`${match.path}/signup`}>\n              {\" \"}\n              Signup\n            </NavLink>\n          </li>\n\n          <li className=\"sub__item\">\n            <NavLink className=\"sub__link\" to={`${match.path}/login`}>\n              {\" \"}\n              Login\n            </NavLink>\n          </li>\n\n          <li className=\"sub__item\">\n            <NavLink className=\"sub__link\" to={`${match.path}/forgotpassword`}>\n              {\" \"}\n              Forgot Password\n            </NavLink>\n          </li>\n\n          <li className=\"sub__item\">\n            <NavLink className=\"sub__link\" to={`${match.path}/updatepassword`}>\n              {\" \"}\n              Update Password\n            </NavLink>\n          </li>\n\n          <li className=\"sub__item\">\n            <NavLink className=\"sub__link\" to={`${match.path}/updateme`}>\n              {\" \"}\n              Update Info\n            </NavLink>\n          </li>\n\n          <li className=\"sub__item\">\n            <NavLink className=\"sub__link\" to={`${match.path}/deleteme`}>\n              {\" \"}\n              Delete Me\n            </NavLink>\n          </li>\n\n          <li className=\"sub__item\">\n            <NavLink className=\"sub__link\" to={`${match.path}/users`}>\n              {\" \"}\n              Get Users\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/step_5.3fdc9fe4.png\";","export default __webpack_public_path__ + \"static/media/step_6.7702c09f.png\";","import React from \"react\";\nimport step_5 from \"./../media/forgotpassword/step_5.png\";\nimport step_6 from \"./../media/forgotpassword/step_6.png\";\n\nimport Authrization from \"./authrization\";\n\nfunction updatePassword() {\n  return (\n    <div>\n      <h2>Update My Password</h2>\n\n      <Authrization />\n      <br />\n\n      <p className=\"docs_desc\">\n        To Update the password for the currently logged in user, you need to make a PATCH\n        request to the following endpoint\n      </p>\n      <br />\n      <span className=\"hilight m-m\">\n        PATCH <div className=\"empty_space\"></div>{\" \"}\n        http://localhost:3000/api/v1/users/updateMyPassword\n      </span>\n      <br />\n      <br />\n      <p className=\"docs_desc m-m\">\n        This will make a patch request to the api and it will try find the user and update\n        his/her password, however, In order for this to work then we need to provide some\n        needed info to veryfiy this proccess, IN our case we need to send three paeaces of\n        information in the request body which are currentPassword, newPassword,\n        passwordConfirm as shown in the tabel below:\n      </p>\n\n      <table>\n        <tr>\n          <th>Property</th>\n          <th>Required</th>\n        </tr>\n\n        <tr>\n          <td>currentPassword</td>\n          <td>True</td>\n        </tr>\n        <tr>\n          <td>newPassword</td>\n          <td>True</td>\n        </tr>\n\n        <tr>\n          <td>passwordConfirm</td>\n          <td>True</td>\n        </tr>\n      </table>\n\n      <p className=\"docs_desc m-s\">\n        so you should send a json object that look something like this:\n      </p>\n\n      <img src={step_5} alt=\"forgot password step\" className=\"docs__img\" />\n\n      <p className=\"docs_desc m-s\">\n        After you have send your object then the server will try to veryfiy the provided\n        info and if everything is passed it will update the user and send back a json web\n        token to login the user in as shown below.\n      </p>\n\n      <img src={step_6} alt=\"forgot password step\" className=\"docs__img\" />\n    </div>\n  );\n}\n\nexport default updatePassword;\n","export default __webpack_public_path__ + \"static/media/step_1.6e8d3287.png\";","import React from \"react\";\nimport Authrization from \"./authrization\";\nimport step_1 from \"./../media/updateUserInfo/step_1.png\";\n\nfunction updateUserInfo() {\n  return (\n    <div>\n      <h2>Update My Info</h2>\n\n      <Authrization />\n      <br />\n\n      <p className=\"docs_desc\">\n        To Update the information for the currently logged in user, you need to make a\n        PATCH request to the following endpoint\n      </p>\n      <br />\n      <span className=\"hilight m-m\">\n        PATCH <div className=\"empty_space\"></div> http://localhost:3000/api/v1/users/me\n      </span>\n      <br />\n      <br />\n      <p className=\"docs_desc m-m\">\n        This will make a patch request to the api and it will try find the user and update\n        his/her information, however, In order for this to work then we need to provide\n        some needed info to veryfiy this proccess, IN our case we need to send three\n        paeaces of information in the request body which are name, email, photo as shown\n        in the tabel below:\n      </p>\n\n      <table>\n        <tr>\n          <th>Property</th>\n          <th>Required</th>\n        </tr>\n\n        <tr>\n          <td>name</td>\n          <td>false</td>\n        </tr>\n        <tr>\n          <td>email</td>\n          <td>false</td>\n        </tr>\n\n        <tr>\n          <td>photo</td>\n          <td>false</td>\n        </tr>\n      </table>\n      <p className=\"docs_desc\">\n        so you should send a json object that has something like these information:\n      </p>\n\n      <img src={step_1} alt=\"forgot password step\" className=\"docs__img\" />\n\n      <p className=\"docs_desc\">\n        The server response will be the updated user information and you are done.\n      </p>\n    </div>\n  );\n}\n\nexport default updateUserInfo;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport DeleteMe from \"../components/DeleteMe\";\nimport ForgotPassword from \"../components/ForgotPassword\";\nimport GetAllUsers from \"../components/GetAllUsers\";\nimport Installation from \"../components/Installation\";\nimport Login from \"../components/Login\";\nimport Signup from \"../components/Signup\";\nimport SubNavList from \"../components/SubNavList\";\nimport updatePassword from \"../components/updatePassword\";\nimport updateUserInfo from \"../components/updateUserInfo\";\n\nexport default function Docs({ match }) {\n  return (\n    <div className=\"docs\">\n      <SubNavList match={match} />\n\n      <div className=\"docs_content\">\n        <Route path={`${match.path}/`} exact component={Installation} />\n        <Route path={`${match.path}/installation`} component={Installation} />\n        <Route path={`${match.path}/signup`} component={Signup} />\n        <Route path={`${match.path}/login`} component={Login} />\n        <Route path={`${match.path}/forgotpassword`} component={ForgotPassword} />\n        <Route path={`${match.path}/updatepassword`} component={updatePassword} />\n        <Route path={`${match.path}/updateme`} component={updateUserInfo} />\n        <Route path={`${match.path}/deleteme`} component={DeleteMe} />\n        <Route path={`${match.path}/users`} component={GetAllUsers} />\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/homeBackground.d3295315.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport headerImg from \"./../media/homeBackground.png\";\n\nexport default function Home() {\n  return (\n    <header className=\"header\">\n      <div className=\"header__box\">\n        <h1 className=\"header__title\">Free Authentication API</h1>\n        <p className=\"header__desc\">\n          Build Fully Functionnal Authentication System Utlizing Our Free API{\" \"}\n        </p>\n        <Link to=\"/docs\" className=\"link header__link\">\n          Get Started\n        </Link>\n      </div>\n\n      <div className=\"header__img--container\">\n        <img src={headerImg} alt=\"header home\" className=\"header__img\" />\n      </div>\n    </header>\n  );\n}\n","import { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport About from \"./pages/About\";\nimport Developer from \"./pages/Developer\";\nimport Docs from \"./pages/Docs\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Nav />\n        <Switch>\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/docs\" component={Docs} />\n          <Route path=\"/developer\" component={Developer} />\n          <Redirect from=\"/\" to=\"/home\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}